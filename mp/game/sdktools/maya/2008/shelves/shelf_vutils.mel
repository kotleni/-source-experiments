global proc shelf_vUtils () {
	loadButtons;
	}


global proc loadButtons() {
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "zooWeightSave"
		  -ann "weight save lets you really quickly store skin weights in a mesh, so you can delete history, make mesh/skeleton changes, and then restore weights"
		-font "tinyBoldLabelFont"
		-image1 "zooWeightSave.xpm"
		-image "zooWeightSave.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooWeightSave;zooSendMail \"-to hamish@valvesoftware.com -subject [using] weightsave\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-docTag "zooAutoSave"
		-label "this is an auto-save feature.  Press this button to load the script, and right click the button to configure it."
		-font "tinyBoldLabelFont"
		-image1 "zooAutoSave_0.xpm"
		-image "zooAutoSave_0.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "source zooAutoSave; if(`zooAutoSaveState`) zooAutoSaveFunctions unload -1; else zooAutoSaveFunctions load -1;zooSendMail \"-to hamish@valvesoftware.com -subject [using] autosave\" \"info\";"
		-actionIsSubstitute 0
	;
	string $assets = `shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-docTag "zooAssets"
		-label "open the asset manager"
		-font "tinyBoldLabelFont"
		-image1 "zooAssets.xpm"
		-image "zooAssets.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooAssets;zooSendMail \"-to hamish@valvesoftware.com -subject [using] assets\" \"info\";"
		-actionIsSubstitute 0`
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-docTag "zooToolBox"
		-label "the zoo toolbox"
		-font "tinyBoldLabelFont"
		-image1 "zooToolBox.xpm"
		-image "zooToolBox.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooToolBox;zooSendMail \"-to hamish@valvesoftware.com -subject [using] toolbox\" \"info\";"
		-actionIsSubstitute 0
	;
	string $shots = `shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-docTag "zooShots"
		-label "opens the shots UI - shots is a tool that lets you cut between multiple cameras in a scene"
		-font "tinyBoldLabelFont"
		-image1 "zooShots.xpm"
		-image "zooShots.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooShots;zooSendMail \"-to hamish@valvesoftware.com -subject [using] shots\" \"info\";"
		-actionIsSubstitute 0`
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "this UI driven tool helps to manage namespaces.  Namespaces are usually created when objects are imported into a scene, and hang around unless they're deleted with a script such as this one."
		-font "tinyBoldLabelFont"
		-image1 "zooNameSpacey.xpm"
		-image "zooNameSpacey.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooNameSpacey;zooSendMail \"-to hamish@valvesoftware.com -subject [using] namespacey\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-annotation "zooXferAnim - transfer animation utility"
		-label "zooXferAnim - transfer animation script"
		-font "tinyBoldLabelFont"
		-image1 "zooXferAnim.xpm"
		-image "zooXferAnim.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooXferAnim;zooSendMail \"-to hamish@valvesoftware.com -subject [using] xferanim\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-annotation "the animation store"
		-docTag "zooAnimStore"
		-label "the animation store"
		-font "tinyBoldLabelFont"
		-image1 "zooAnimStore.xpm"
		-image "zooAnimStore.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooAnimStore;zooSendMail \"-to hamish@valvesoftware.com -subject [using] animstore\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-annotation "keymaster is a key manipulation tool - has useful key scaling and offsetting functions"
		-docTag "zooKeymaster"
		-label "keymaster"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "mastr"
		-image1 "zooKeyCommands.xpm"
		-image "zooKeyCommands.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooKeymasterWin;zooSendMail \"-to hamish@valvesoftware.com -subject [using] keymaster\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-annotation "load/unload zooTriggered! - right click for additional options"
		-docTag "zooTriggered"
		-label "zooTriggered! shelf button"
		-font "tinyBoldLabelFont"
		-image1 "zooTriggered_0.xpm"
		-image "zooTriggered_0.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "source zooTriggered; source zooTriggeredUtils; if(`zooTriggeredState`) zooTriggeredUnload; else zooTriggeredLoad;"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-annotation "loads the zooKeyCommands UI - keyCommands is a tool to run mel commands on an object for each key in the timeline"
		-docTag "zooKeyCommands"
		-label "zooKeyCommands interface"
		-font "tinyBoldLabelFont"
		-image1 "zooKeyCommands.xpm"
		-image "zooKeyCommands.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "source zooKeyCommandsWin;zooSendMail \"-to hamish@valvesoftware.com -subject [using] keycommands\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "zooGreaseMonkey"
		  -ann "grease monkey is a tool that allows you to \"draw\" over a viewport.  great for sketching out poses before comitting the time to actually creating the poses with a rig"
		-font "tinyBoldLabelFont"
		-image1 "zooGreaseMonkey.xpm"
		-image "zooGreaseMonkey.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooGreaseMonkey;zooSendMail \"-to hamish@valvesoftware.com -subject [using] greasemonkey\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "zooGraphFilter"
		  -ann "graph filters is UI that allows you to quickly and easily see particular curves in the graph editor"
		-font "tinyBoldLabelFont"
		-image1 "zooGraphFilter.xpm"
		-image "zooGraphFilter.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooGraphFilter;zooSendMail \"-to hamish@valvesoftware.com -subject [using] gfilter\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-annotation "builds a line of action on to a bunch of selected objects"
		-docTag "zooLineOfAction"
		-label "zooLineOfAction"
		-font "tinyBoldLabelFont"
		-image1 "zooLineOfAction.xpm"
		-image "zooLineOfAction.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "source zooLineOfAction; zooLineOfAction_multi `ls -sl` \"\";zooSendMail \"-to hamish@valvesoftware.com -subject [using] loa\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-docTag "zooCST"
		-label "zooCST - the character setup toolkit"
		-font "tinyBoldLabelFont"
		-image1 "zooCST.xpm"
		-image "zooCST.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooCST;zooSendMail \"-to hamish@valvesoftware.com -subject [using] cst\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "renamer"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "rename"
		-image1 "zooRenamer.xpm"
		-image "zooRenamer.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooRenamer;zooSendMail \"-to hamish@valvesoftware.com -subject [using] renamer\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-docTag "zooTriggerator"
		-label "triggerator selection trigger author UI"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel ""
		-image1 "triggerator.bmp"
		-image "triggerator.bmp"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooTriggerator;zooSendMail \"-to hamish@valvesoftware.com -subject [using] triggerator\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 0
		-width 34
		-height 34
		-docTag "zooPickwalk"
		-label "pickwalk author UI"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "Pwalk"
		-image1 "zooPickwalk.bmp"
		-image "zooPickwalk.bmp"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooPickwalkAuthor;zooSendMail \"-to hamish@valvesoftware.com -subject [using] pwalk\" \"info\";"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "group selected objects to self"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "grp2self"
		-image1 "commandButton.xpm"
		-image "commandButton.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "source zooCSTUtils; for( $a in `ls -sl` ) zooGrpToSelf \"\" $a;"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "zooReorderAttribs;"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "reOrder"
		-image1 "commandButton.xpm"
		-image "commandButton.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooReorderAttribs;"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "zooReplaceShape source target"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "rShape"
		-image1 "commandButton.xpm"
		-image "commandButton.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "{\r\nstring $selected[] = `ls -sl`;\r\nzooReplaceShape $selected [0] $selected[1] 0;\r\n}"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "apply deltas to animation"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "delta"
		-image1 "deltaAnims.bmp"
		-image "deltaAnims.bmp"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "deltaAnims;zooSendMail \"-to hamish@valvesoftware.com -subject [using] deltaanim\" \"info\";"
		-actionIsSubstitute 0
	;
	string $visMan = `shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "loads the heirarchical visibility set manager"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel ""
		-image1 "visMan.bmp"
		-image "visMan.bmp"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "zooVisMan; zooSendMail \"-to hamish@valvesoftware.com -subject [using] visMan\" \"info\";"
		-actionIsSubstitute 0`
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "aarons IK/FK snap tool"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "IKFK"
		-image1 "commandButton.xpm"
		-image "commandButton.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "IKFKsnapGUI;"
		-actionIsSubstitute 0
	;
	shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "vZoomer"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel ""
		-image1 "vZoomer.bmp"
		-image "vZoomer.bmp"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "vZoomer;"
		-actionIsSubstitute 0
	;
	string $constraint = `shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "vZoomer"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "const"
		-image1 "commandButton.xpm"
		-image "commandButton.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command ""
		-actionIsSubstitute 0`
	;
	string $constraint = `shelfButton
		-enableCommandRepeat 1
		-width 34
		-height 34
		-label "overlap"
		-font "tinyBoldLabelFont"
		-imageOverlayLabel "jigl"
		-image1 "commandButton.xpm"
		-image "commandButton.xpm"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "python(\"import overlap; overlap.addOverlap();\");"
		-actionIsSubstitute 0`
	;

	//update button UI states
	if( `exists zooUpdateAutoSaveUIState` ) zooUpdateAutoSaveUIState;
	if( `exists zooTrigUpdateUIState` ) zooTrigUpdateUIState;

	//build the assets right click menu
	zooAssetsUtils;
	zooShelveIt;
	string $assetsButtons[] = `zooGetShelfButtonAll zooAssets`;
	for( $a in $assetsButtons ) {
		if( size(`shelfButton -q -pma $a`)) continue;
		string $pop = `popupMenu -p $a -aob 1`;
		popupMenu -e -pmc ( "zooAssetsBuildPopMenu "+ $pop +";" ) $pop;
		}

	//
	popupMenu -p $visMan -aob 1 -pmc( "zooVisManBuildBookmarksMenu vUtilsShelfVisMan 0;" ) vUtilsShelfVisMan;

	//
	popupMenu -p $shots -aob 1;
		menuItem -l "turn HUD on" -c( "source zooHUDCtrl; zooHUDState 1;" );
		menuItem -l "turn HUD off" -c( "source zooHUDCtrl; zooHUDState 0;" );
		menuItem -d 1;
		menuItem -l "HUD control" -c( "zooHUDCtrl;" );

	popupMenu -p $constraint -pmc "constraintPresets; constraintPresetsPopup vUtilsShelfConstraintPopup;" vUtilsShelfConstraintPopup;

	//make a cache of icons used in the shelf - ie copy them locally
	cacheShelfIcons vUtils;

}
