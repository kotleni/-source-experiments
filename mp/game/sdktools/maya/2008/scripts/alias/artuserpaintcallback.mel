// Copyright (C) 1997-2006 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//
//
//



// Script Paint Tool UI script
//
global proc artUserPaintSetupCallback(
	string $jasperCommand
)
{
	textFieldGrp -e
		-cc ($jasperCommand + " -e -tsc \"#1\" `currentCtx`")
		toolSetupTextField;

	textFieldGrp -e
		-cc ($jasperCommand + " -e -tcc \"#1\" `currentCtx`")
		toolCleanupTextField;

	textFieldGrp -e
		-cc ($jasperCommand + " -e -gsc \"#1\" `currentCtx`")
		getSrfTextField;

	textFieldGrp -e
		-cc ($jasperCommand + " -e -ic \"#1\" `currentCtx`")
		initTextField;

	textFieldGrp -e
		-cc ($jasperCommand + " -e -fc \"#1\" `currentCtx`")
		finalizeTextField;

	textFieldGrp -e
		-cc ($jasperCommand + " -e -svc \"#1\" `currentCtx`")
		setValueTextField;

	textFieldGrp -e
		-cc ($jasperCommand + " -e -gvc \"#1\" `currentCtx`")
		getValueTextField;

	textFieldGrp -e
		-cc ($jasperCommand + " -e -gac \"#1\" `currentCtx`")
		getArrayAttrTextField;

	checkBoxGrp -e
		-cc1 ($jasperCommand + " -e -fp #1 `currentCtx`")
		fullPathsChkBox;
}
// =======================================================
// Main Procedure.
// =======================================================

global proc artUserPaintCallback(
	string	$artCommand
)
{
	{
		int $override = 0;
		catchQuiet( $override = vst_artUserPaintCallback( $artCommand ) );
		if ( $override )
			return;
	}

	source "artisanCallback.mel";
	source "artAttrCallback.mel";

	string $currContext = `currentCtx`;
	string $currTool	= `contextInfo -c $currContext`;

	// Basic Brush frameLayout.
	artisanBrushCallback( $artCommand, $currTool );

	// Define the common callbacks.
	artAttrCommonCallback( $artCommand, $currTool );

	// Stroke frameLayout.
	artisanStrokeCallback( $artCommand, $currTool );

	// Stroke frameLayout.
	artisanPressureCallback( $artCommand, $currTool );

	// Attribute Maps frameLayout.
	artisanAttrMapCallback( $artCommand, $currTool );

	// Display frameLayout.
	artisanDisplayCallback( $artCommand, $currTool );

	artUserPaintSetupCallback($artCommand);
}

