/*source tfScatGunImport;tfScatGunImport();*/global proc tfScatGunImport( ){	// source the script that contains makeVAF, etc	source zooXferAnimUtils;	source vstAnimationLibrary;	source vstPoseLibrary;	vstPoseLibrary(); //opens the dialog	//source deltaAnims;			string $vproject = `getenv VPROJECT`;	string $folder = ( $vproject + "/../../content/tf/models/player/scout/animations/" );		//print $animNames;		//scenes to process go here	string $DMXdirectory = ( $vproject + "/../../content/tf/models/player/scout/animations/dmx/" );	//string $animNames[] = `getFileList -fld $directory -fs "secondary_*.ma"`;//string $animNames[] = `getFileList -folder ($folder+"maya/") -fs "primary*"`;	string $animNames[] = {						/*							"primary_aimmatrix_crouch_idle.ma",							"primary_aimmatrix_idle.ma",							"primary_aimmatrix_run.ma",							"primary_aimmatrix_runS.ma",							"primary_aimmatrix_walk.ma",							"primary_airwalk.ma",							"primary_crouch_fire.ma",							"primary_crouch_idle.ma",							"primary_crouch_walkE.ma",							"primary_crouch_walkN.ma",							"primary_crouch_walkNE.ma",							"primary_crouch_walkNW.ma",							"primary_crouch_walkS.ma",							"primary_crouch_walkSE.ma",							"primary_crouch_walkSW.ma",							"primary_crouch_walkW.ma",							"primary_die_backstab.ma",							"primary_fire.ma",													"primary_idle.ma",							"primary_jumpCenter.ma",							"primary_jumpE.ma",							"primary_jumpLand.ma",							"primary_jumpLandPose.ma",							"primary_jumpN.ma",							"primary_jumpNE.ma",							"primary_jumpNW.ma",							"primary_jumpS.ma",							"primary_jumpSE.ma",							"primary_jumpSW.ma",							"primary_jumpW.ma",							"primary_jump_floatNoise.ma",							"primary_reload.ma",																												"primary_runCenter.ma",							"primary_runE.ma",							"primary_runN.ma",							"primary_runNE.ma",							"primary_runNW.ma",									"primary_runS.ma",							"primary_runSE.ma",							"primary_runSW.ma",							"primary_runW.ma",														"primary_airwalk.ma",												"primary_swimCenter.ma",							"primary_swimE.ma",							"primary_swimN.ma",							"primary_swimNE.ma",							"primary_swimNW.ma",							"primary_swimS.ma",							"primary_swimSE.ma",							"primary_swimSW.ma",							"primary_swimW.ma"																			"primary_walkCenter.ma",							"primary_walkE.ma",							"primary_walkN.ma",							"primary_walkNE.ma",							"primary_walkNW.ma",														"primary_walkS.ma",							"primary_walkSE.ma",							"primary_walkSW.ma",							"primary_walkW.ma"					*/													};	//main process loop.  executes 1x for each file listed above	string $anim ;	for ( $anim in $animNames )	{								//string $vpfFile =  ( "aa_" + `basename $anim ".ma"` + "_pose.vpf" ); 		file -f -o ( $folder + "maya/" + $anim );						//reference in the scat gun		$reffile = "%VPROJECT%/../../content/tf/models/weapons/w_models/w_scattergun/parts/maya/w_scattergun_rig.ma";		file -r -namespace "Wep1" $reffile;				//constrain the control to the smg one, constrain player weapon bone to gun's, move the LH constrainer obj to the scatgun control, remove the nailgun reference.		parentConstraint -weight 1 "Wpn:w_supersmgControl" "Wep1:w_scattergunControl";		string $s[] = `ls -r true "LhandControl_gun" `;		int $bIsLHctrlAround;		if( $s[0] != "" )			{				$bIsLHctrlAround = 1;				parent "LhandControl_gun" "Wep1:w_scattergunControl";					}						/* comment this block for swims, airwalk start		else		{				$bIsLHctrlAround = 0;			//create it, etc			string $LHctrl[] = `polyCube -w 8 -h 8 -d 8 -sx 1 -sy 1 -sz 1 -ax 0 1 0 -tx 1 -ch 1 -name "LhandControl_gun"`;			vstSetDisplay( "P", $LHctrl[0] );						print( "**** LH cntrl not found in scene: " + $anim );			delete -cn "Rig:likHandControlWeaponGroup";			parent $LHctrl[0] "Wep1:w_scattergunControl";		}			comment this block for swims, airwalk end */						delete -cn Rig:Ref:bip_hand_R|Rig:Ref:weapon_bone;		parentConstraint -weight 1 "Wep1:Ref:weapon_bone" "Rig:Ref:bip_hand_R|Rig:Ref:weapon_bone";				delete -cn Wep:w_nailgunControl;		referenceEdit -r "%VPROJECT%/../../content/tf/models/weapons/w_models/w_nailgun/parts/maya/w_nailgun_rig.ma";		file -rr "%VPROJECT%/../../content/tf/models/weapons/w_models/w_nailgun/parts/maya/w_nailgun_rig.ma";				//copy the rot order from the original control to the new one, set the same parent obj		setAttr Wep1:w_scattergunControl.rotateOrder `getAttr Wpn:w_supersmgControl.rotateOrder` ;		parent "Wep1:w_scattergunControl" "Wpn:w_supersmgControlParentGroup";				//copy the anim from the original gun to the new one		zooXferBatch "-mode 0 -instance 0" { "Wpn:w_supersmgControl" } { "Wep1:w_scattergunControl" };		delete -cn "Wep1:w_scattergunControl";				//constrain RH to the new gun cntrl		delete -cn "Rig:rikHandControlWeaponGroup";		parentConstraint -w 1 -mo "Wep1:w_scattergunControl" "Rig:rikHandControlWeaponGroup";				//delete existing anim on fingers, etc		string $sel[] = `ls -r true "bip_index*RControl" `;		$sel = stringArrayCatenate ($sel, `ls -r true "rikHandControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "rHandControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "bip_middle*RControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "bip_ring*RControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "bip_pinky*RControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "bip_thumb*RControl"`);		/*swim comment out		$sel = stringArrayCatenate ($sel, `ls -r true "bip_index*LControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "likHandControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "lHandControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "bip_middle*LControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "bip_ring*LControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "bip_pinky*LControl"`);		$sel = stringArrayCatenate ($sel, `ls -r true "bip_thumb*LControl"`);		*/		select -r $sel;		select -add "LhandControl_gun";		delete -channels -unitlessAnimationCurves false  -hierarchy none -controlPoints 0 -shape 1;		//string $handsPose = "scat_handsOnGun.vpf";		$handsPose = "scat_RH.vpf";		importPose( "scout", $handsPose );		//select -r $sel;		setKeyframe -t 0;				//try to position LH correctly on gun if the LH control wasnt in scene to start		/* comment this block our for swims, etc		if( $bIsLHctrlAround == 0 )		{			print "*****trying to put lh on gun******";			string $bs[] = `spaceLocator -n "locatorBullshit"`;			parent $bs[0] "LhandControl_gun";			importPose( "scout", "locator_bullshit.vpf" );			pointConstraint $bs[0] "Rig:likHandControl";			orientConstraint $bs[0] "Rig:lHandControl";			select -r Rig:likHandControl ;			select -tgl Rig:lHandControl ;			delete -channels -unitlessAnimationCurves false  -hierarchy none -controlPoints 0 -shape 1;			setKeyframe -t 0;			parentConstraint -w 1 -mo "LhandControl_gun" "Rig:likHandControlWeaponGroup";			delete -cn Rig:likHandControl Rig:lHandControl;			delete $bs[0];		}		*/			//remove smg file reference node		file -rr "%VPROJECT%/../../content/tf/models/weapons/w_models/w_smg/parts/maya/w_smg_rig.ma";		//string $name = (`basename $anim ".ma"` + "_bat.ma");		//print $name;		//file -rename $name ;		file -save -type "mayaAscii";						//$anim = `basename $anim ".ma"`;		//$saveMa = (`basename $anim ".vaf"` + ".ma" );		//$saveMa = `substitute "primary" $saveMa "melee"`;		//$vafFile = `basename $anim ".ma"`;					//$vpfFile = ( $folder + "library/" + $vpfFile );		//string $vafFile = ( $folder + "library/" + "aa_" + $vafFile + ".vaf" );		//print ( $vafFile + "\n") ;			//$anim = `substitute "run" $anim "walk"` ;				//string $mayaFile = ( "medic/animations/maya/" + $anim );		//string $player = "medic" ;		//import the vaf anim				//print ( "\n" + $anim);		//importAnim( "medic", ("aa_" + $anim ));				//select our crap and store the pose		//currentTime 0 ;		//select -r Rig:PelvisControl Rig:Ref:prp_hippouch_0_LControl Rig:Ref:prp_hippouch_0_BControl Rig:Ref:bip_spine_0FKcontrol Rig:Ref:bip_spine_1FKcontrol Rig:Ref:bip_spine_2FKcontrol Rig:Ref:bip_spine_3FKcontrol Rig:lShoulderControl Rig:rShoulderControl Rig:neckControl Rig:headControl Rig:Ref:prp_glassesControl Rig:likHandControl Rig:lHandControl Rig:Ref:bip_thumb_0_LControl Rig:Ref:bip_thumb_1_LControl Rig:Ref:bip_thumb_2_LControl Rig:Ref:bip_index_0_LControl Rig:Ref:bip_index_1_LControl Rig:Ref:bip_index_2_LControl Rig:Ref:bip_middle_0_LControl Rig:Ref:bip_middle_1_LControl Rig:Ref:bip_middle_2_LControl Rig:Ref:bip_ring_0_LControl Rig:Ref:bip_ring_1_LControl Rig:Ref:bip_ring_2_LControl Rig:Ref:bip_pinky_1_LControl Rig:Ref:bip_pinky_2_LControl Rig:rikHandControl Rig:rHandControl Rig:Ref:bip_thumb_0_RControl Rig:Ref:bip_thumb_1_RControl Rig:Ref:bip_thumb_2_RControl Rig:Ref:bip_index_0_RControl Rig:Ref:bip_index_1_RControl Rig:Ref:bip_index_2_RControl Rig:Ref:bip_middle_0_RControl Rig:Ref:bip_middle_1_RControl Rig:Ref:bip_middle_2_RControl Rig:Ref:bip_ring_0_RControl Rig:Ref:bip_ring_1_RControl Rig:Ref:bip_ring_2_RControl Rig:Ref:bip_pinky_0_RControl Rig:Ref:bip_pinky_1_RControl Rig:Ref:bip_pinky_2_RControl Wep:w_bonesawControl ;		//select -tgl Rig:UpperbodyControl ;		//select -tgl Rig:rElbowControl ;		//select -tgl Rig:lElbowControl ;					//storePose();				//apply our startpose and store the delta, apply it to 		/*		string $poseAnim = `basename $anim ".vaf"`;		$poseAnim = `substitute "primary_jump" $poseAnim "melee_run"`;		$poseAnim = ( "aa_" + $poseAnim + "_pose.vpf" );		print ( "\nthe Pose Anim is : " +$poseAnim);		importPose( "medic", $poseAnim );		storeDelta();		applyDelta( "fwd" );				print "delta was applied\n";				//save our scene as the name						//do stuff here 		//select right hand controls and delete animation from them				select -r Rig:rikHandControl Rig:rHandControl Rig:Ref:bip_thumb_0_RControl Rig:Ref:bip_thumb_1_RControl Rig:Ref:bip_thumb_2_RControl Rig:Ref:bip_index_0_RControl Rig:Ref:bip_index_1_RControl Rig:Ref:bip_index_2_RControl Rig:Ref:bip_middle_0_RControl Rig:Ref:bip_middle_1_RControl Rig:Ref:bip_middle_2_RControl Rig:Ref:bip_ring_0_RControl Rig:Ref:bip_ring_1_RControl Rig:Ref:bip_ring_2_RControl Rig:Ref:bip_pinky_0_RControl Rig:Ref:bip_pinky_1_RControl Rig:Ref:bip_pinky_2_RControl ;		delete -c;		//importAnim( $player, $vafFile );		string $med[] = {"medic"};		string $pos[] = {"primary_RH_Gunpose.vpf"};		importPoseHack( $med, $pos );		setKeyframe;		//fixup the gun bones		select Wep:Ref:joint_lever Wep:Ref:joint_hose01 Wep:Ref:weapon_bone ;		delete -cn ;		parentConstraint -weight 1 Wep:Ref:joint_lever Rig:Ref:joint_lever;		parentConstraint -weight 1 Wep:Ref:joint_hose01 Rig:Ref:joint_hose01;		parentConstraint -weight 1 Wep:Ref:weapon_bone Rig:Ref:bip_hand_R|Rig:Ref:weapon_bone;				//parentConstraint -weight 1 Wep:Ref:weapon_bone_L Ref:bip_hand_L|Ref:weapon_bone_L;		//export the dmx		//vsDmxIO -sl -export -et s  -filename $dmxFile "Rig:Ref:medicInfo" ;				//print ("\nExported: " + $fullExportString + "\n" ) ;				//save file as new name		string $dmxFile = ( `basename $saveMa ".ma"` );		$dmxFile = $DMXdirectory + $dmxFile;		vsDmxIO -sl -export -et s  -filename $dmxFile "Rig:Ref:medicInfo" ;		file -rename $saveMa ;		file -save -type "mayaAscii";		//LH_Primary_onGun						//makeVPF  ( $vpfFile );		//makeVAF( $vafFile );		*/	}}