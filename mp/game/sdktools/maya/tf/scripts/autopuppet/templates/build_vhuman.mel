// clear out scene
//file -f -new;

// get locators
string $tmpDir = `getenv "PUPPET_DIR"`;;
//evalEcho("source \"" + $tmpDir + "/locators.mel\"");


// get the control nodes
string $hip_L_cntrl       = `brAutoPuppetQuery -q hip_L`;
string $knee_L_cntrl      = `brAutoPuppetQuery -q knee_L`;
string $heel_L_cntrl      = `brAutoPuppetQuery -q heel_L`;
string $toe_L_cntrl       = `brAutoPuppetQuery -q toe_L`;
string $head_cntrl        = `brAutoPuppetQuery -q head`;
string $neck_cntrl        = `brAutoPuppetQuery -q neck`;
string $chest_cntrl       = `brAutoPuppetQuery -q chest`;
string $pelvis_cntrl      = `brAutoPuppetQuery -q pelvis`;
string $clavicle_R_cntrl  = `brAutoPuppetQuery -q clavicle_R`;
string $shoulder_R_cntrl  = `brAutoPuppetQuery -q shoulder_R`;
string $elbow_R_cntrl     = `brAutoPuppetQuery -q elbow_R`;
string $wrist_R_cntrl     = `brAutoPuppetQuery -q wrist_R`;
string $clavicle_L_cntrl  = `brAutoPuppetQuery -q clavicle_L`;
string $shoulder_L_cntrl  = `brAutoPuppetQuery -q shoulder_L`;
string $elbow_L_cntrl     = `brAutoPuppetQuery -q elbow_L`;
string $wrist_L_cntrl     = `brAutoPuppetQuery -q wrist_L`;
string $hip_R_cntrl       = `brAutoPuppetQuery -q hip_R`;
string $knee_R_cntrl      = `brAutoPuppetQuery -q knee_R`;
string $heel_R_cntrl      = `brAutoPuppetQuery -q heel_R`;
string $toe_R_cntrl       = `brAutoPuppetQuery -q toe_R`;

///////////////////////////////////////////
// create the individual puppet objects
///////////////////////////////////////////

// create arms
string $arm_L[] = `brCreatePuppetArm arm_L $clavicle_L_cntrl $shoulder_L_cntrl $elbow_L_cntrl $wrist_L_cntrl 4 1`;
string $arm_R[] = `brCreatePuppetArm arm_R $clavicle_R_cntrl $shoulder_R_cntrl $elbow_R_cntrl $wrist_R_cntrl 4 1`;
string $jArmRoot_L = $arm_L[0];
string $jArmRoot_R = $arm_R[0];
string $jArmSternum_L = $arm_L[1];
string $jArmSternum_R = $arm_R[1];
string $jAarmSternum_L = $arm_L[2];
string $jArmShoulder_R = $arm_R[2];

// create legs
string $leg_L[] = `brCreatePuppetLeg leg_L $hip_L_cntrl $knee_L_cntrl $heel_L_cntrl $toe_L_cntrl `;
string $leg_R[] = `brCreatePuppetLeg leg_R $hip_R_cntrl $knee_R_cntrl $heel_R_cntrl $toe_R_cntrl `;
string $jLegRoot_L = $leg_L[0];
string $jLegRoot_R = $leg_R[0];
string $jLegHip_L = $leg_L[1];
string $jLegHip_R = $leg_R[1];

// create spine
string $spine[] = `brCreatePuppetSpine back y $pelvis_cntrl $chest_cntrl 4`;
string $jSpineRoot = $spine[0];
string $jSpineChest = $spine[1];
string $spineGroup = $spine[2];
string $spineChestWrapper = $spine[3];
string $spinePelvisWrapper = $spine[4];

// create head and neck
string $head[] = `brCreatePuppetHead neck y $chest_cntrl $neck_cntrl $head_cntrl 2`;
string $jNeck = $head[0];
//string $jHead = $head[1];
string $neckGroup = $head[2];
string $neckHeadControls = $head[3];

// parent joints appropriately
parent -a $jNeck $jSpineChest;
parent -a $jArmRoot_L $jArmRoot_R $jSpineChest;
parent -a $jLegRoot_L $jLegRoot_R $jSpineRoot;

///////////////////////////////////////////
// organize the locators
///////////////////////////////////////////

// parent unused positioner controls under the chest and pelvis wrappers
parent -a $hip_L_cntrl $hip_R_cntrl $spinePelvisWrapper;
parent -a $clavicle_L_cntrl $clavicle_R_cntrl $shoulder_L_cntrl $shoulder_R_cntrl $neck_cntrl $spineChestWrapper;

// parent head to the chest
parent -a $neckHeadControls $chest_cntrl;

// parent the elbow pole vectors to the chest
parent -a $elbow_L_cntrl $elbow_R_cntrl $chest_cntrl;

// parent the knee pole vectors to the feet
parent -a  $knee_L_cntrl $heel_L_cntrl;
parent -a  $knee_R_cntrl $heel_R_cntrl;

// hide locators that have become positioners
hide $hip_L_cntrl $hip_R_cntrl $clavicle_L_cntrl $clavicle_R_cntrl $shoulder_L_cntrl $shoulder_R_cntrl $neck_cntrl;

// get the AP_puppetInfo node
string $buf[] = `ls "AP_*"`;
string $puppetInfoNode = $buf[0];

// group the rig to make it all purdy.
parent -a $spineGroup $neckGroup dontLookAtMe $puppetInfoNode;
setAttr ( $jSpineChest + ".drawStyle") 1;
setAttr ( $jSpineRoot  + ".drawStyle") 1;


// print success
print ":::::::::::::::::::::::::::::::::::::: \n";
print "::: CREATURE rig successfully created \!\! \n";
