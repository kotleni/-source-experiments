global proc int writeLocatorFile (string $directory)
{  
	select -cl;
	
	// write out the locators.ma file for human
	string $buf[] = `ls "AP_*"`;
	string $puppetInfo = $buf[0];
	string $bufA[]; 
	tokenize ($puppetInfo, "_", $bufA);
	string $creType = $bufA[1];
	string $controlNodes[] = `listAttr -ud $puppetInfo`;
	select -r $puppetInfo;
	select -add $controlNodes;
	//string $locatorFile = `file -es -type "mayaAscii" ($directory + "/locators.ma" )`;

	// write out the script to recreate the locators.	
	string $locatorScript = ($directory + "/locators.mel");
	//string $locatorScript = $directory;
	brCreatePuppetNulls -w $locatorScript;
	
	return 1;
}

global proc int writeLocatorFileThenCompile (string $directory)
{  
	select -cl;
	
	// write out the locators file
	string $buf[] = `ls "AP_*"`;
	string $puppetInfo = $buf[0];
	string $bufA[]; 
	tokenize ($puppetInfo, "_", $bufA);
	string $creType = $bufA[1];
	string $controlNodes[] = `listAttr -ud $puppetInfo`;
	select -r $puppetInfo;
	select -add $controlNodes;
	//string $locatorFile = `file -es -type "mayaAscii" ($directory + "/locators.ma" )`;
	// write out the script to recreate the locators.	
	string $locatorScript = ($directory + "/locators.mel");
	brCreatePuppetNulls -w $locatorScript;
	
	// empty the current scene
//	file -f -new;
	
	// copy the template file for the locator type
	string $compileScript = ($directory + "/build_" + $creType + ".mel");

	// we need a dos version of $directory so the system call doesn't fail
	string $nativeDir = toNativePath($directory);
	system ("copy " + "U:\\dev\\main\\content\\arttools\\maya\\7.0\\modules\\autopuppet\\scripts\\templates\\build_" + $creType + ".mel" + " " + $nativeDir );
	// replace point the script to the locator file using grp_sub.csh

	grp_sub "PUPPETDIR" $directory $compileScript;
	grp_sub "CREATURETYPE" $creType $locatorScript;

	// source the compile script
//	evalEcho( "source \"" + $locatorScript + "\"");
	evalEcho( "source \"" + $compileScript + "\"");
	
	// frame viewport.
	select -all; fitAllPanels -selected;  select -cl;
	
	return 1;
	
}

global proc brAutoPuppetCompile(string $flag) 
{  
	switch ($flag)
	{
		 case "-loc":
			fileBrowserDialog -m 1 -fc "writeLocatorFile " -an "Select Directory To Write Locator File";
			break;

		case "-dbs":
			fileBrowserDialog -m 4 -fc "writeLocatorFileThenCompile" -an "Select Directory For Puppet Database";
			break;

		case "-tmp":
			string $tmpDir = "c:/temp/autoPuppet_scratch";
			if (!`filetest -d $tmpDir`)
			{
				string $nativeTmpDir = toNativePath($tmpDir);
				system ("mkdir " + $nativeTmpDir);
			}

			putenv "PUPPET_DIR" $tmpDir;
			writeLocatorFileThenCompile $tmpDir;
			break;
		default:
			error "Valid arguments are -loc, -dbs, or -tmp.";
			break;
	}
}
