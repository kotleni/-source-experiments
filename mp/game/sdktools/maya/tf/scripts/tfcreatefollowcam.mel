/*source tfCreateFollowCam;tfCreateFollowCam();*///use:  pass in a lowercase string that specifies the axes you want to have the camera follow, the the base name of the object that drives it. namespace not required //eg.  tfCreateFollowCam( "xz", "upperbody" ) will have the camera follow translateX and translateZ of the upperbody control.global proc tfCreateFollowCam( string $axes, string $driver ){string $thisCam[];$thisCam = `camera -centerOfInterest 5 -focalLength 35 -lensSqueezeRatio 1 -cameraScale 1 -horizontalFilmAperture 1.4173 -horizontalFilmOffset 0 -verticalFilmAperture 0.9449 -verticalFilmOffset 0 -filmFit Vertical -overscan 1 -motionBlur 0 -shutterAngle 144 -nearClipPlane 0.01 -farClipPlane 1000 -orthographic 0 -orthographicWidth 30`; string $camName = `rename $thisCam[0] "tfFollowCam"`;//objectMoveCommand; cameraMakeNode 2 $camName;string $camGroupNode = ($camName + "_group");string $camDriver[] = `ls -r true $driver`;print $camGroupNode;print ($camDriver );if (`gmatch $axes "*x*"`)		connectAttr -f ($camDriver[0] + ".translateX") ($camGroupNode + ".translateX" );	if (`gmatch $axes "*y*"`)		connectAttr -f ($camDriver[0] + ".translateY") ($camGroupNode + ".translateY" );	if ( `gmatch $axes "*z*"` )		connectAttr -f ($camDriver[0] + ".translateZ") ($camGroupNode + ".translateZ" );		setAttr ( $camGroupNode+".visibility") 0;	}