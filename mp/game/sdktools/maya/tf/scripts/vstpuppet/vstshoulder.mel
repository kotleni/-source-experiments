//*****************************************
//
//	vstShoulder
//	-creates a control sphere that controls the orientation of the bone
//
//	use: vstOrientControl( "side", "name", "bone", "parent", "offset x", "offset y" , "offset z", "radius", vstInfo );
//	returns: name of the control
//
// 	by: steve/wade
//	stevek@valvesoftware.com
//	wade@valvesoftware.com
//	5/18/2006
//		-passed in the vstInfo node so that channels can be locked/hidden/added to plotted
//
//******************************************

global proc string vstShoulder( string $side, string $name, string $bones[], string $parent,  float $radius, string $vstInfo ) 
{
	string $controlName = $side + $name;

	select -cl;
	if ( $side == "c" || $side == "C" )
	{
		// we dont want the middle controls being called cfkNeck, or cFKspine01
 		$controlName = $name;
 	}
 	
	vstBoneToCylinder( $bones[0], $bones[1], $radius, $controlName );
	parent $controlName $parent;

	vstSetDisplay( $side, $controlName );
	delete `parentConstraint $bones[0] $controlName`;
	select $controlName;
	// zero out the rotations
	string $zeroGroup = `vstMakeZero( $controlName )`;

	orientConstraint -mo $controlName $bones[0];
	pointConstraint  $bones[0] $controlName;


	vstHideChannels( $controlName, { ".tx", ".ty", ".tz", ".sx", ".sy", ".sz", ".v" } );
	vstSelectHandle( $controlName, 0,0,0 );
	string $sideLower = `tolower( $side )`;
	vstInfoAttr( ( $sideLower + "FKshoulderControl" ), $controlName, $vstInfo );
	vstAddPlotted( $controlName );

	return $controlName;
}