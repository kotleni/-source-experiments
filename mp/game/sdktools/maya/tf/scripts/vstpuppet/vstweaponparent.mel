//*****************************************
//
//	vstWeaponParent
//	-sets up the parent of the weapon
// -sets up attrs to turn off rotation and trnaslation parenting
//
//	use: vstWeaponParent (weaponControl, parent)
//
//	by: steve/wade
//	stevek@valvesoftware.com
//	wade@valvesoftware.com
//	5/23/2006
//
//******************************************

global proc vstWeaponParent( string $weaponControl, string $parent )
{
	
		//first make a group of the weapon control
		//this is what we will constrain to the parent
		string $groupName = ($weaponControl + "ParentGroup");
		string $group = `group -n $groupName $weaponControl`;

		
		//add attributes to the weapon control to turn off the parenting or not
		if ( !`attributeExists "parentTrans" $weaponControl` )
		{
			addAttr -ln "parentTrans" -at double -k 1 -min 0 -max 1 -dv 1 $weaponControl;
		}
		if ( !`attributeExists "parentRot" $weaponControl` )
		{
			addAttr -ln "parentRot" -at double -k 1 -min 0 -max 1 -dv 1 $weaponControl;
		}

		//constrain the weapon group to the weapon control
		string $pointCons[] = `pointConstraint $parent $group`;
		string $orientCons[] = `orientConstraint -mo $parent $group`;
		string $control;
		//strip out the name space, should be Rig:
		if ( `gmatch $parent "*:*"` )
		{
			string $buffer[];
			int $numTokens = `tokenize $parent ":"  $buffer`;
			$control = $buffer[$numTokens -1];
		}
		else 
			$control = $parent;

		//find the names of the constraints 
		//and connect them to the attrs
		string $pointWeight = ( $pointCons[0] + "." + $control + "W0" );
		string $orientWeight = ( $orientCons[0] + "." + $control + "W0" );

		connectAttr ( $weaponControl + ".parentTrans" ) $pointWeight;
		connectAttr ( $weaponControl + ".parentRot" ) $orientWeight;

		select -cl;

}