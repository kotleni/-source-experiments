//*****************************************
//
//	vstWeaponAttach
//	-sets up attachments for a weapon
//
//	use: vstWeaponAttach (side, weaponControl, vstInfo)
//
//	by: steve/wade
//	stevek@valvesoftware.com
//	wade@valvesoftware.com
//	5/23/2006
//
//******************************************

global proc vstWeaponAttach( string $sides[], string $weaponControl, string $vstInfo )
{
	
	//we can set this up tp be on both the left and right side, or just single sides
	//pass in an array for sides, use "l", or "r"
	for ( $side in $sides )
	{
		//find the name of the ik hand controls 
		string $handControl[] = `listConnections ($vstInfo + "." + $side + "IKcontrol")`;
		//and the weapon attach groups
		string $weaponAttach[] = `listConnections ($vstInfo + "." + $side + "WeaponAttach")`;
		
		//add an attribute to the hand control to turn off the parenting or not
		if ( !`attributeExists "weaponParent" $handControl[0]` )
		{
			addAttr -ln "weaponParent" -at double -k 1 -min 0 -max 1 -dv 1 $handControl[0];
		}

		// set the aim attribute to 0 so the hands stay aligned to the weapon
		setAttr ( $handControl[0] + ".aim" ) 0;

		//parent constrain the weapon group to the weapon control
		string $parCons[] = `parentConstraint $weaponControl $weaponAttach[0]`;

		string $control;
		//strip out the name space, should be Rig:
		if ( `gmatch $weaponControl "*:*"` )
		{
			string $buffer[];
			int $numTokens = `tokenize $weaponControl ":"  $buffer`;
			$control = $buffer[$numTokens -1];
		}
		else 
			$control = $weaponControl;

	
		string $conWeight = ( $parCons[0] + "." + $control + "W0" );
		connectAttr ( $handControl[0] + ".weaponParent" ) $conWeight;
	}

	select -cl;
}



