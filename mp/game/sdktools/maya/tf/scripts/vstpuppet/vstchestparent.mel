//*****************************************
//
//	vstChestParent
// 	makes a transform node that will serve as the parent for all controls above the chest
// 	this transform node blends its parent between the IK and FK spine so the upper body behaves
//  properly no matter which spine is being animated
//
//	returns: name of the created chest parent node
//
// 	by: steve/wade
//	stevek@valvesoftware.com
//	wade@valvesoftware.com
//	3/24/2006
//	5/18/2006
//		-passed in the vstInfo node to add the vstInfoAttr
//
//******************************************

global proc string vstChestParent (string $name, string $parent, string $spine[], string $fkSpine[], string $ikSpine[], string $vstInfo )
{
	
	$chestParent = `createNode "transform" -n $name`;
	parent $chestParent $parent;
	// get the last bone in each spine array
	int $sizeSpine = size($spine);
	$last = ($sizeSpine - 1);
	$lastSpine = $spine[$last];
	$lastFK = $fkSpine[$last];
	$lastIK = $ikSpine[$last];
	
	// stick the node to the last bone
	float $chestPos[] = `xform -q -t -ws $lastSpine`;	
	setAttr ($chestParent + ".translate") $chestPos[0] $chestPos[1] $chestPos[2];
	// zero it out
	select -r $chestParent;
	makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;

	vstInfoAttr( "chestParent", $chestParent, $vstInfo );


	return $chestParent;
}