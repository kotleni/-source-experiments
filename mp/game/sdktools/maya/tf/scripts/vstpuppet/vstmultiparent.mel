//*****************************************
//
//	vstMultiParent
//  by: steve
//	stevek@valvesoftware.com
//	3/27/2006 2:27PM
//
// for some controls, we need to pat attention to two parents this sets that up
// for example a prop that hangs off of any FK/IK controlled limb (spine, arm, legs) needs to have this applied
// so we keep the bones controls parented under main, but the bones will be in the right place when the blending occurs
//
//******************************************


global proc  vstMultiParent(string $object, string $parent1, string $parent2, string $switch) 

{

// setting a keyframe will force a blend attr to be added when this object is constrained
// if this is not done the constrain weight will be set to 0 if this object is ever keyframed
	
	select -r $object;
	//setKeyframe -hierarchy none ;
//	ok now parent constrain to both joints
//	and get the new attrs that are made	
	string $parCons[] = `parentConstraint -mo $parent1 $parent2 $object`;
	
	string $attrs[] = `listAttr -k $object`;
	int $numAttrs = size($attrs);

//this is the blend attr that maya adds
	//string $blendAttr = $attrs[($numAttrs -1)];
	
//set the blend node to 1 and lock it
	//setAttr -l on ($object + "." + $blendAttr) 1;


//these are the things we really want, the constraint weights
	string $conAttrs[] = `listAttr -k $parCons[0]`;
	int $numAttrs = size($conAttrs);
	string $fkAttr = ($parCons[0] + "." + $conAttrs[($numAttrs - 2)]);
	string $ikAttr = ($parCons[0] + "." + $conAttrs[($numAttrs - 1)]);

//now set up some expressions to link this thing to the IKFK back switch
	string $fkExp = ($fkAttr + "= 1 - "+ $switch);
		expression -s $fkExp -n "fkParent";
	//string $ikExp = ($ikAttr + "= "+ $switch+ "/10");
		connectAttr $switch $ikAttr;

		//expression -s $ikExp -n "ikParent";
	
}
