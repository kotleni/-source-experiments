//*****************************************
//
//	vstHandControl
//  -makes a hand controller with fingers
//	TODO: add a flag for skipping finger creation?
//
// 	by: steve/wade
//	stevek@valvesoftware.com
//	wade@valvesoftware.com
//	3/27/2006
//	5/17/2006
//		-added finger control creation
//		-moved locking and hiding channels from the original rig biped script
//
//******************************************

global proc string[] vstFingerControl( string $side, string $fingerNames[], string $hand, string $axis, string $radius, int $middle, string $parent, string $FKarm, string $IKcontrol )
{
	select -cl;

	string $sideLower = `tolower( $side )`;

	string $fingers[];
	string $fHideTransScaleVis[];
	string $fHideRyRz[];
	for ($f in $fingerNames)
	{
		string $fControl[] = vstFKchain( $side, { ( $f + "_0_" + $side ), ( $f + "_1_" + $side ), ( $f + "_2_" + $side ), ( $f + "End_" + $side ) },  $radius );
		for ( $count = 0; $count < size( $fControl ); $count++ )
		{
			$fHideTransScaleVis[size( $fHideTransScaleVis )] = $fControl[$count];
			if ($count > 0) $fHideRyRz[size( $fHideRyRz )] = $fControl[$count];
			vstSelectHandle ($fControl[$count], 0, 0, 0);
			vstAddPlotted ($fControl[$count]);
		}
		$fingers[size( $fingers )] = $fControl[0];
	}

	$fingerControl = ( $sideLower + "HandControl" );

	// make the cylinder
	vstBoneToCylinder( $hand, $fingers[$middle], $radius, $fingerControl );

	// stick it to the hand bone
	delete `parentConstraint $hand $fingerControl`;

	// zero it out
	string $zeroGroup =`vstMakeZero( $fingerControl )`;
	parent $zeroGroup $parent;

	// make a group - this will come in handy when we multi parent stuff
	$fingerControlGroup = `group -n ($fingerControl + "Group") $fingerControl`;

	// now parent the fingers to this new bone and link their groups to the control attrs
	// the way this is set up is that we link the transform groups to the attr,
	// but not the finger control - so there is always FK control
//	select -r $fingerControl;
//	string $liftAttr = "knuckleLift";
//	addAttr -ln $liftAttr -at double -k 1 -min -100 -max 100 -dv 0;
//	select -cl;
	string $rollName;
	for ( $firstFinger in $fingers )
	{
		parent $firstFinger $fingerControl;
		select -r $fingerControl;
		if ( `gmatch $firstFinger "*:*"` )
		{
			string $buffer[];
			$numTokens = `tokenize $firstFinger ":" $buffer`;
			$rollName = ( $buffer[$numTokens -1] + "Roll" );
		}
		else
		{
			$rollName = ( $firstFinger  + "Roll" );
		}
		addAttr -ln $rollName -at double -k 1 -min -100 -max 100 -dv 0;
		// go through all the fingers, zero them out and add a roll group
		select -hi $firstFinger;
		string $allFingers[] = `ls -sl -type "transform"`;
		for ( $finger in $allFingers )
		{
			string $zeroGroup = `vstMakeZero( $finger )`;

			string $group = `group -n ( $finger + "rollGroup" ) $finger`;
			float $pos[] = `getAttr ( $finger + ".translate" )`;
			setAttr ( $group + ".rotatePivot" ) $pos[0] $pos[1] $pos[2];
			setAttr ( $group + ".scalePivot" ) $pos[0] $pos[1] $pos[2];
			connectAttr -f ( $fingerControl + "." + $rollName ) ( $group + $axis );
		}
 		if ( !`gmatch $firstFinger "*thumb*"` )
 		{
			string $liftGroup = `group -n ( $firstFinger + "LiftGroup" ) $firstFinger`;
		 	//float $pos[] = `xform -q -t -ws $fingerControl`;
 			//setAttr ($liftGroup + ".rotatePivot") $pos[0] $pos[1] $pos[2];
			//setAttr ($liftGroup + ".scalePivot") $pos[0] $pos[1] $pos[2];
			//connectAttr -f ($fingerControl + "." + $liftAttr) ($liftGroup + $axis);
		}
	}

	vstAddPlotted( $fingerControl );

	vstSetDisplay( $sideLower, $fingerControl );
	orientConstraint  $fingerControl $hand;
	pointConstraint $hand $fingerControl;

	parent $fingerControlGroup $parent;
	string $fingerControls[];
	$fingerControls[0] = $fingerControlGroup;
	$fingerControls[1] = $fingerControl;

	for ( $hide in $fHideTransScaleVis )
	{
		vstHideChannels ( $hide, { ".tx", ".ty", ".tz", ".sx", ".sy", ".sz", ".v" } );
	}
	for ( $hide in $fHideRyRz )
	{
		vstHideChannels ( $hide, {".ry", ".rz"} );
	}

	vstMultiParent( $fingerControls[0], $FKarm, $IKcontrol, ( $parent + "." + $sideLower + "ArmIKFK" ) );
	vstHideChannels( $fingerControls[1], { ".tx", ".ty", ".tz", ".sx", ".sy", ".sz" } );
	vstSelectHandle( $fingerControls[1], 0, -3, 3 );


	return $fingerControls;
}